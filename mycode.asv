clc;
clear all;
close all;
warning off;
T = 16; % transmit antenas
R = 8; % receive antenas
M = 4; % users
%K = 3;  % interference sources
N = 20; % number of symbols
P_max = 1; %power Watt
N_montecarlo = 1;
SNRdB = -2:2:12;
rho = 0.1;
lambda = 1; % penalty parameter (IMPORTANT in similarity constraint !!!)
alpha = 0.01; % Descent rate
max_iter = 200;
amp = sqrt(P_max);
delta=pi/180;   % Space between elements of antena 
theta=-pi/2:delta:pi/2;
target_DoA=[-20*pi/180,20*pi/180];
interference_DoA = [-60*pi/180,40*pi/180];
sigma_t = [0.1, 0.2]; %W
sigma_k = [1,1]; %W
sigma_n = 0.001; %W

% Tính đến bài toán QoS
% -- Design desired beam pattern -- %
%%-------------Radar Parameters-------------------

for tt=1:T
    for jj=1:length(theta)
        a(tt,jj)=exp(-1j*pi*(tt-1)*sin(theta(jj)));
    end
end


for tt=1:R
    for jj=1:length(theta)
        a_r(tt,jj)=exp(-1j*pi*(tt-1)*sin(theta(jj)));
    end
end


for i=1:length(a)
    A_theta(:,:,i) = kron(eye(N),a_r(:,i)*a(:,i)');
end

% Design beampattern
beam_width=9;
l=ceil((target_DoA+pi/2*ones(1,length(target_DoA)))/(delta)+ones(1,length(target_DoA)));
Pd_theta=zeros(length(theta),1);
for ii=1:length(target_DoA)
    Pd_theta(l(ii)-(beam_width-1)/2:l(ii)+(beam_width-1)/2,1)=ones(beam_width,1);
end

l=ceil((interference_DoA+pi/2*ones(1,length(interference_DoA)))/(delta)+ones(1,length(interference_DoA)));
for ii=1:length(interference_DoA)
    Pd_theta(l(ii)-(beam_width-1)/2:l(ii)+(beam_width-1)/2,1)=-0.1*ones(beam_width,1);
end


%R_d = my_waveform_design(T,A_tt,A_kk,P_max);
R_d = waveform_design_multibm_covmat_new( Pd_theta,T,a,theta,P_max); % Desired Hermitian positive semidefinite covariance matrix
F = chol(R_d)'; % Cholesky decomposition


for nn = 1:N_montecarlo
    H = (randn(M,T)+1j*randn(M,T))/sqrt(2); % Channel
    N_pbits = 2*M*N;
    msg_bits = randi([0,1],1,N_pbits);
    Y = reshape(QPSK_mapper(msg_bits),[M,N]);

    %% joint waveform design and filter
    X_omni = Orthogonal_Com_Rad(H,Y,P_max); % Problem (8)
    X_dir = Arbitrary_Com_Rad(H,Y,P_max,F); % Problem (10)
    H_pinv = pinv(H);
    tt = trace(H_pinv*Y*Y'*H_pinv');
    ff = sqrt(N*P_max/tt);

    %% My problem

    [x_TE,w_TE,cost_TE] = joint_trade_off_TE(rho,H,Y,N,T,R,P_max,target_DoA,interference_DoA,sigma_t,sigma_k,sigma_n,max_iter,alpha);
    [x_TE_SIM,w_TE_SIM,cost_TE_SIM] = joint_trade_off_TE_SIM(rho,H,Y,N,T,R,P_max,target_DoA,interference_DoA,sigma_t,sigma_k,sigma_n,max_iter,alpha,lambda,X_dir);
    [x_CM,w_CM,cost_CM] = joint_trade_off_CM(rho,H,Y,N,T,R,P_max,target_DoA,interference_DoA,sigma_t,sigma_k,sigma_n,max_iter,alpha);
    [x_CM_SIM,w_CM_SIM,cost_CM_SIM] = joint_trade_off_CM_SIM(rho,H,Y,N,T,R,P_max,target_DoA,interference_DoA,sigma_t,sigma_k,sigma_n,max_iter,alpha,lambda,X_dir);
    X_opt_TE = reshape(x_TE,[T N]);
    X_opt_TE_SIM = reshape(x_TE_SIM,[T N]);
    X_opt_CM = reshape(x_CM,[T N]);
    X_opt_CM_SIM = reshape(x_CM_SIM,[T N]);

    for ii = 1:length(SNRdB)
        N0 = P_max/(10^(SNRdB(ii)/10)); % Chưa xét đến công suất thu theo pass loss
        for mm = 1:N
            MUI_TE(:,mm) = abs(H*X_opt_TE(:,mm)-amp*Y(:,mm)).^2;
            MUI_TE_SIM(:,mm) = abs(H*X_opt_TE_SIM(:,mm)-amp*Y(:,mm)).^2;
            MUI_CM(:,mm) = abs(H*X_opt_CM(:,mm)-amp*Y(:,mm)).^2;
            MUI_CM_SIM(:,mm) = abs(H*X_opt_CM_SIM(:,mm)-amp*Y(:,mm)).^2;
        end
        EMUI_TE = mean(MUI_TE,2);
        EMUI_TE_SIM = mean(MUI_TE_SIM,2);
        EMUI_CM = mean(MUI_CM,2);
        EMUI_CM_SIM = mean(MUI_CM_SIM,2);

        sumrate_TE(ii,nn) = sum(log2(1+P_max./(EMUI_TE+N0*ones(M,1))));
        sumrate_TE_SIM(ii,nn) = sum(log2(1+P_max./(EMUI_TE_SIM+N0*ones(M,1))));
        sumrate_CM(ii,nn) = sum(log2(1+P_max./(EMUI_CM+N0*ones(M,1))));
        sumrate_CM_SIM(ii,nn) = sum(log2(1+P_max./(EMUI_CM_SIM+N0*ones(M,1))));
        sumrate_lim(ii,nn) = sum(log2(1+P_max./(N0*ones(M,1))));
    end
    clc
    disp(['Progress - ',num2str((nn-1)*length(SNRdB)+ii),'/',num2str(length(SNRdB)*N_montecarlo)]);
end


for i=1:length(a)
    P_d_TE(i) = abs(w_TE'*A_theta(:,:,i)*x_TE)^2;
    P_d_TE_SIM(i) = abs(w_TE_SIM'*A_theta(:,:,i)*x_TE_SIM)^2;
    P_d_CM(i) = abs(w_CM'*A_theta(:,:,i)*x_CM)^2;
    P_d_CM_SIM(i) = abs(w_CM_SIM'*A_theta(:,:,i)*x_CM_SIM)^2;
end




%%
figure(1);
plot(SNRdB,mean(sumrate_TE,2),'x-','LineWidth',1.5,'MarkerSize',8); hold on;
plot(SNRdB,mean(sumrate_TE_SIM,2),'o-','LineWidth',1.5,'MarkerSize',8); hold on;
plot(SNRdB,mean(sumrate_CM,2),'^-','LineWidth',1.5,'MarkerSize',8); hold on;
plot(SNRdB,mean(sumrate_CM_SIM,2),'*-','LineWidth',1.5,'MarkerSize',8); hold on;
plot(SNRdB,mean(sumrate_lim,2),'v--','LineWidth',1.5,'MarkerSize',8); hold on;

grid on;
xlabel('Transmit SNR (dB)');
ylabel('Average Achievable Sum Rate (bps/Hz)');
legend('TE','TE+SIM','CM','CM+SIM','Zero MUI');

figure(2);
% plot(theta*180/pi,10*log10(diag(a_t'*X_opt*X_opt'*a_t)/real(trace(X_opt*X_opt'))),'LineWidth',1.5);hold on;
% plot(theta*180/pi,10*log10(diag(a'*X_omni*X_omni'*a)/real(trace(X_omni*X_omni'))),'LineWidth',1.5);hold on;
% plot(theta*180/pi,10*log10(diag(a'*X_dir*X_dir'*a)/real(trace(X_dir*X_dir'))),'LineWidth',1.5);hold on;
% plot(theta*180/pi,10*log10(diag(a'*X_trdoff1*X_trdoff1'*a)/real(trace(X_trdoff1*X_trdoff1'))),'LineWidth',1.5);hold on;
% plot(theta*180/pi,10*log10(diag(a'*X_trdoff2*X_trdoff2'*a)/real(trace(X_trdoff2*X_trdoff2'))),'LineWidth',1.5);hold on;
% plot(theta*180/pi,10*log10(diag(a'*X_trdoff3*X_trdoff3'*a)/real(trace(X_trdoff3*X_trdoff3'))),'LineWidth',1.5);hold on;
% plot(theta*180/pi,10*log10(diag(a'*X_trdoff4*X_trdoff4'*a)/real(trace(X_trdoff4*X_trdoff4'))),'LineWidth',1.5);grid on;
% xlim([-90,90]);
% xlabel('\theta(deg)');
% ylabel('Beampattern');
%legend('Omni-Strict','Directional-Strict','Omni-Tradeoff-Total,\rho = 0.2','Directional-Tradeoff-Total,\rho = 0.2','Omni-Tradeoff-perAnt,\rho = 0.2','Directional-Tradeoff-perAnt,\rho = 0.2');
plot(theta*180/pi,10*log10(diag(a'*X_dir*X_dir'*a)/real(trace(X_dir*X_dir'))),'LineWidth',1.5);hold on;
plot(theta*180/pi,10*log10(diag(a'*X_opt_TE*X_opt_TE'*a)/real(trace(X_opt_TE*X_opt_TE'))),'LineWidth',1.5);hold on;
%plot(theta*180/pi,10*log10(diag(a_r'*X_receive*X_receive'*a_r)/real(trace(X_receive*X_receive'))),'LineWidth',1.5);hold on;
plot(theta*180/pi,10*log10(P_d_TE),'LineWidth',1.5);hold on;

xlim([-90,90]);
xline(target_DoA*180/pi, 'b-.','Linewidth', 1);
xline(interference_DoA*180/pi, 'k-.', 'Linewidth', 1);
xlabel('\theta(deg)');
ylabel('Beampattern');
legend('reference waveform','transmit','receive');


figure(3);
plot(abs(cost_TE));hold on;
plot(abs(cost_TE_SIM));hold on;
plot(abs(cost_CM));hold on;
plot(abs(cost_CM_SIM));hold on;
xlabel('iter');
ylabel('Objective Function Value');
legend('TE','TE+SIM','CM','CM+SIM');




